@using ELearningBlazor.Services
@using ELearningBlazor.Models
@using ELearningBlazor.Utils
@inject AuthService AuthService

<div class="space-y-6">
    <!-- Header -->
    <div class="flex items-center justify-between">
        <div>
            <h2 class="text-2xl font-bold text-midnight_text">My Certificates</h2>
            <p class="text-gray-600">Your earned certificates and achievements</p>
        </div>
        <div class="text-right">
            <p class="text-sm text-gray-500">Total Certificates</p>
            <p class="text-2xl font-bold text-midnight_text">@completedCourses.Count</p>
        </div>
    </div>

    <!-- Certificate Stats -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
            <div class="flex items-center gap-3 mb-3">
                <div class="w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center">
                    <span class="text-2xl">üèÜ</span>
                </div>
                <div>
                    <h3 class="font-bold text-midnight_text">Certificates Earned</h3>
                    <p class="text-2xl font-bold text-midnight_text">@completedCourses.Count</p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
            <div class="flex items-center gap-3 mb-3">
                <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                    <span class="text-2xl">üìÖ</span>
                </div>
                <div>
                    <h3 class="font-bold text-midnight_text">Latest Certificate</h3>
                    <p class="text-sm text-gray-600">
                        @if (latestCertificate != null)
                        {
                            @latestCertificate.EnrollmentDate.ToString("MMM yyyy")
                        }
                        else
                        {
                            <span>No certificates yet</span>
                        }
                    </p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
            <div class="flex items-center gap-3 mb-3">
                <div class="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
                    <span class="text-2xl">üéì</span>
                </div>
                <div>
                    <h3 class="font-bold text-midnight_text">Skills Mastered</h3>
                    <p class="text-2xl font-bold text-midnight_text">@totalSkills</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Certificates Grid -->
    @if (completedCourses.Any())
    {
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
            @foreach (var courseInfo in completedCourses)
            {
                var course = DataService.GetCourseById(courseInfo.CourseId);

                @if (course != null)
                {
                    <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden hover:shadow-xl transition-shadow">
                        <!-- Certificate Header -->
                        <div class="bg-gradient-to-r from-primary to-secondary p-6 text-white">
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="text-xl font-bold mb-1">Certificate of Completion</h3>
                                    <p class="text-primary-100">eLearning Platform</p>
                                </div>
                                <div class="text-4xl">üèÜ</div>
                            </div>
                        </div>

                        <!-- Certificate Content -->
                        <div class="p-6">
                            <div class="text-center mb-6">
                                <h4 class="text-lg font-bold text-midnight_text mb-2">@course.Heading</h4>
                                <p class="text-gray-600 mb-1">Completed by <strong>@AuthService.CurrentUser.Name</strong></p>
                                <p class="text-sm text-gray-500">on @courseInfo.EnrollmentDate.AddDays(30).ToString("MMMM dd, yyyy")</p>
                            </div>

                            <!-- Course Details -->
                            <div class="grid grid-cols-2 gap-4 mb-6 text-sm">
                                <div class="text-center p-3 bg-gray-50 rounded-lg">
                                    <p class="text-gray-600">Duration</p>
                                    <p class="font-semibold text-midnight_text">@course.Duration</p>
                                </div>
                                <div class="text-center p-3 bg-gray-50 rounded-lg">
                                    <p class="text-gray-600">Level</p>
                                    <p class="font-semibold text-midnight_text">@course.Level</p>
                                </div>
                            </div>

                            <!-- Skills Learned -->
                            <div class="mb-6">
                                <h5 class="font-semibold text-midnight_text mb-3">Skills Acquired:</h5>
                                <div class="flex flex-wrap gap-2">
                                    @foreach (var skill in course.WhatYouLearn.Take(3))
                                    {
                                        <span class="text-xs bg-primary/10 text-primary px-2 py-1 rounded-full">@skill</span>
                                    }
                                    @if (course.WhatYouLearn.Count > 3)
                                    {
                                        <span class="text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded-full">+@(course.WhatYouLearn.Count - 3) more</span>
                                    }
                                </div>
                            </div>

                            <!-- Certificate Actions -->
                            <div class="flex gap-3">
                                <button class="flex-1 bg-primary text-white py-3 px-4 rounded-lg font-semibold hover:bg-primary/90 transition-colors text-sm">
                                    üîó View Certificate
                                </button>
                                <button class="flex-1 bg-gray-100 text-midnight_text py-3 px-4 rounded-lg font-semibold hover:bg-gray-200 transition-colors text-sm">
                                    üì• Download PDF
                                </button>
                            </div>

                            <!-- Verification Info -->
                            <div class="mt-4 p-3 bg-green-50 rounded-lg border border-green-200">
                                <div class="flex items-center gap-2">
                                    <span class="text-green-600">‚úì</span>
                                    <span class="text-sm text-green-700">
                                        Verified Certificate ‚Ä¢ ID: EL@(course.Id.ToString().PadLeft(4, '0'))@(AuthService.CurrentUser.Id.ToString().PadLeft(3, '0'))
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <!-- Share Achievement -->
        <div class="bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl p-8 text-white text-center">
            <h3 class="text-2xl font-bold mb-4">üéâ Congratulations!</h3>
            <p class="mb-6 text-blue-100">You've earned @completedCourses.Count certificate@(completedCourses.Count == 1 ? "" : "s")! Share your achievements with the world.</p>

            <div class="flex justify-center gap-4">
                <button class="bg-white/20 hover:bg-white/30 text-white px-6 py-3 rounded-lg font-semibold transition-colors">
                    üìò Share on LinkedIn
                </button>
                <button class="bg-white/20 hover:bg-white/30 text-white px-6 py-3 rounded-lg font-semibold transition-colors">
                    üê¶ Share on Twitter
                </button>
            </div>
        </div>
    }
    else
    {
        <!-- No Certificates Yet -->
        <div class="text-center py-16">
            <div class="mb-8">
                <div class="w-32 h-32 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
                    <span class="text-6xl text-gray-400">üèÜ</span>
                </div>
                <h3 class="text-2xl font-bold text-midnight_text mb-4">No certificates yet</h3>
                <p class="text-gray-600 mb-8 max-w-md mx-auto">
                    Complete your first course to earn a certificate and showcase your new skills!
                </p>
            </div>

            <!-- Available Courses -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 max-w-2xl mx-auto">
                <h4 class="font-bold text-midnight_text mb-4">Courses in Progress</h4>

                @if (inProgressCourses.Any())
                {
                    <div class="space-y-4">
                        @foreach (var courseInfo in inProgressCourses.Take(3))
                        {
                            var course = DataService.GetCourseById(courseInfo.CourseId);

                            @if (course != null)
                            {
                                <div class="flex items-center gap-4 p-4 bg-gray-50 rounded-lg">
                                    <img src="@ImageHelper.GetImagePath(course.ImgSrc)"
                                         alt="@course.Heading"
                                         class="w-12 h-12 rounded-lg object-cover" />

                                    <div class="flex-grow text-left">
                                        <h5 class="font-semibold text-midnight_text text-sm">@course.Heading</h5>
                                        <div class="flex items-center gap-2 mt-1">
                                            <div class="flex-1 bg-gray-200 rounded-full h-2">
                                                <div class="bg-primary h-2 rounded-full" style="width: @(courseInfo.Progress)%"></div>
                                            </div>
                                            <span class="text-xs text-gray-500">@($"{courseInfo.Progress:F0}")%</span>
                                        </div>
                                    </div>

                                    <button class="bg-primary text-white px-4 py-2 rounded-lg text-sm font-semibold hover:bg-primary/90 transition-colors">
                                        Continue
                                    </button>
                                </div>
                            }
                        }
                    </div>
                }
                else
                {
                    <p class="text-gray-500 text-sm">No courses in progress</p>
                    <a href="/" class="inline-block mt-4 bg-primary text-white px-6 py-3 rounded-lg hover:bg-primary/90 transition-colors">
                        Browse Courses
                    </a>
                }
            </div>
        </div>
    }
</div>

@code {
    private List<EnrolledCourse> completedCourses = new();
    private List<EnrolledCourse> inProgressCourses = new();
    private EnrolledCourse? latestCertificate;
    private int totalSkills = 0;

    protected override void OnInitialized()
    {
        LoadCertificatesData();
    }

    private void LoadCertificatesData()
    {
        if (AuthService.CurrentUser == null) return;

        var allEnrollments = AuthService.CurrentUser.EnrolledCourses.Where(ec => ec.IsActive).ToList();

        completedCourses = allEnrollments
            .Where(ec => ec.Progress >= 100)
            .OrderByDescending(ec => ec.EnrollmentDate)
            .ToList();

        inProgressCourses = allEnrollments
            .Where(ec => ec.Progress < 100)
            .OrderByDescending(ec => ec.LastAccessed ?? ec.EnrollmentDate)
            .ToList();

        latestCertificate = completedCourses.FirstOrDefault();

        // Calculate total skills from completed courses
        totalSkills = completedCourses
            .Select(ec => DataService.GetCourseById(ec.CourseId))
            .Where(c => c != null)
            .SelectMany(c => c!.WhatYouLearn)
            .Distinct()
            .Count();
    }
}